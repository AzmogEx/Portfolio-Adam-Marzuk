// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           String   @id @default(cuid())
  title        String
  description  String
  image        String?
  technologies String   // JSON array stored as string
  githubUrl    String?
  liveUrl      String?
  order        Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Experience {
  id           String   @id @default(cuid())
  title        String   // Poste occupé ou diplôme
  company      String   // Entreprise ou école
  location     String   // Lieu
  startDate    String   // Date début (format YYYY-MM)
  endDate      String?  // Date fin (optionnel pour "Présent")
  description  String   // Array JSON des descriptions/détails
  technologies String   // Array JSON des technologies (pour expériences pro)
  type         String   @default("work") // "work" pour expérience, "education" pour formation
  order        Int      @default(0)     // Pour réorganisation
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Tool {
  id          String   @id @default(cuid())
  name        String   // Nom de l'outil (ex: "VS Code", "GitHub")
  category    String   // Catégorie (ex: "editor", "collaboration", "testing")
  level       String   // Niveau de maîtrise ("expert", "advanced", "intermediate", "beginner")
  icon        String   // Emoji ou identifiant d'icône
  description String?  // Description optionnelle de l'outil
  order       Int      @default(0) // Pour réorganisation
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SoftSkill {
  id          String   @id @default(cuid())
  name        String   // Nom de la compétence (ex: "Travail en équipe")
  category    String   // Catégorie (ex: "communication", "leadership", "organization")
  level       String   // Niveau de maîtrise ("expert", "advanced", "intermediate", "beginner")
  icon        String   // Emoji ou identifiant d'icône
  description String?  // Description optionnelle de la compétence
  order       Int      @default(0) // Pour réorganisation
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
